<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ly.dao.EmployeeMapper">
  <resultMap id="BaseResultMap" type="com.ly.entity.Employee">
    <!--@mbg.generated-->
    <!--@Table employee-->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="dept_id" jdbcType="BIGINT" property="deptId" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="birthday" jdbcType="TIMESTAMP" property="birthday" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="tel" jdbcType="VARCHAR" property="tel" />
    <result column="sal" jdbcType="FLOAT" property="sal" />
    <result column="profession" jdbcType="VARCHAR" property="profession" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, dept_id, username, birthday, sex, tel, sal, profession, address, remark
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from employee
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--@mbg.generated-->
    delete from employee
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.ly.entity.Employee" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into employee (dept_id, username, birthday, 
      sex, tel, sal, profession, 
      address, remark)
    values (#{deptId,jdbcType=BIGINT}, #{username,jdbcType=VARCHAR}, #{birthday,jdbcType=TIMESTAMP}, 
      #{sex,jdbcType=VARCHAR}, #{tel,jdbcType=VARCHAR}, #{sal,jdbcType=FLOAT}, #{profession,jdbcType=VARCHAR}, 
      #{address,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.ly.entity.Employee" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into employee
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="deptId != null">
        dept_id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="tel != null">
        tel,
      </if>
      <if test="sal != null">
        sal,
      </if>
      <if test="profession != null">
        profession,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="deptId != null">
        #{deptId,jdbcType=BIGINT},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="tel != null">
        #{tel,jdbcType=VARCHAR},
      </if>
      <if test="sal != null">
        #{sal,jdbcType=FLOAT},
      </if>
      <if test="profession != null">
        #{profession,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ly.entity.Employee">
    <!--@mbg.generated-->
    update employee
    <set>
      <if test="deptId != null">
        dept_id = #{deptId,jdbcType=BIGINT},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="tel != null">
        tel = #{tel,jdbcType=VARCHAR},
      </if>
      <if test="sal != null">
        sal = #{sal,jdbcType=FLOAT},
      </if>
      <if test="profession != null">
        profession = #{profession,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ly.entity.Employee">
    <!--@mbg.generated-->
    update employee
    set dept_id = #{deptId,jdbcType=BIGINT},
      username = #{username,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=TIMESTAMP},
      sex = #{sex,jdbcType=VARCHAR},
      tel = #{tel,jdbcType=VARCHAR},
      sal = #{sal,jdbcType=FLOAT},
      profession = #{profession,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <resultMap id="BaseResultMap2" type="com.ly.vo.EmployeeVo">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="department_name" jdbcType="BIGINT" property="deptName" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="birthday" jdbcType="TIMESTAMP" property="birthday" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="tel" jdbcType="VARCHAR" property="tel" />
    <result column="sal" jdbcType="FLOAT" property="sal" />
    <result column="profession" jdbcType="VARCHAR" property="profession" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>

  <select id="selectByPage" resultMap="BaseResultMap2">
    select
    e.id,d.department_name,e.username,e.birthday,e.sex,e.tel,e.sal,e.profession,e.address,e.remark
    from employee e
    inner join department d
    on e.dept_id = d.id
    <where>
      <if test="username != null and username != ''">
        and username = #{username,jdbcType=VARCHAR}
      </if>
      <if test="deptId != null and deptId != ''">
        and dept_id = #{deptId,jdbcType=BIGINT}
      </if>
    </where>
    limit #{pageNumByLimit,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER}
  </select>

  <select id="getAll" resultMap="BaseResultMap2">
    select
    e.id,d.department_name,e.username,e.birthday,e.sex,e.tel,e.sal,e.profession,e.address,e.remark
    from employee e
    inner join department d
    on e.dept_id = d.id
  </select>
</mapper>